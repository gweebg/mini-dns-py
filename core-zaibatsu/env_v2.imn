node n1 {
    type router
    model router
    network-config {
	hostname router-8
	!
	interface eth1
	 ip address 10.0.16.1/24
	 ipv6 address 2001:16::1/64
	!
	interface eth7
	 ip address 10.0.15.1/24
	 ipv6 address 2001:15::1/64
	!
	interface eth6
	 ip address 10.0.14.1/24
	 ipv6 address 2001:14::1/64
	!
	interface eth4
	 ip address 10.0.12.1/24
	 ipv6 address 2001:12::1/64
	!
	interface eth3
	 ip address 10.0.11.1/24
	 ipv6 address 2001:11::1/64
	!
	interface eth2
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	!
	interface eth0
	 ip address 10.0.8.1/24
	 ipv6 address 2001:8::1/64
	!
    }
    canvas c1
    iconcoords {1035.3333333333335 596.3333333333334}
    labelcoords {1035.3333333333335 628.3333333333334}
    interface-peer {eth0 n8}
    interface-peer {eth2 n9}
    interface-peer {eth3 n4}
    interface-peer {eth4 n6}
    interface-peer {eth6 n7}
    interface-peer {eth7 n3}
    interface-peer {eth1 n23}
}

node n3 {
    type router
    model router
    network-config {
	hostname router-5
	!
	interface eth3
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	!
	interface eth2
	 ip address 10.0.15.2/24
	 ipv6 address 2001:15::2/64
	!
	interface eth1
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
	interface eth0
	 ip address 10.0.6.2/24
	 ipv6 address 2001:6::2/64
	!
    }
    canvas c1
    iconcoords {674.3333333333334 596.3333333333334}
    labelcoords {674.3333333333334 628.3333333333334}
    interface-peer {eth0 n7}
    interface-peer {eth1 n8}
    interface-peer {eth2 n1}
    interface-peer {eth3 n27}
}

node n4 {
    type router
    model router
    network-config {
	hostname router-2
	!
	interface eth3
	 ip address 10.0.13.1/24
	 ipv6 address 2001:13::1/64
	!
	interface eth2
	 ip address 10.0.11.2/24
	 ipv6 address 2001:11::2/64
	!
	interface eth1
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
	interface eth0
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
    }
    canvas c1
    iconcoords {1397.3333333333333 596.3333333333334}
    labelcoords {1397.3333333333333 628.3333333333334}
    interface-peer {eth0 n9}
    interface-peer {eth1 n6}
    interface-peer {eth2 n1}
    interface-peer {eth3 n12}
}

node n6 {
    type router
    model router
    network-config {
	hostname router-3
	!
	interface eth1
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
	interface eth2
	 ip address 10.0.12.2/24
	 ipv6 address 2001:12::2/64
	!
	interface eth0
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
    }
    canvas c1
    iconcoords {1253.3333333333333 788.3333333333334}
    labelcoords {1253.3333333333333 820.3333333333334}
    interface-peer {eth0 n4}
    interface-peer {eth2 n1}
    interface-peer {eth1 n7}
}

node n7 {
    type router
    model router
    network-config {
	hostname router-4
	!
	interface eth3
	 ip address 10.0.9.1/24
	 ipv6 address 2001:9::1/64
	!
	interface eth0
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth2
	 ip address 10.0.14.2/24
	 ipv6 address 2001:14::2/64
	!
	interface eth1
	 ip address 10.0.6.1/24
	 ipv6 address 2001:6::1/64
	!
    }
    canvas c1
    iconcoords {820.3333333333334 787.3333333333334}
    labelcoords {820.3333333333334 819.3333333333334}
    interface-peer {eth1 n3}
    interface-peer {eth2 n1}
    interface-peer {eth0 n6}
    interface-peer {eth3 n29}
}

node n8 {
    type router
    model router
    network-config {
	hostname router-7
	!
	interface eth3
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
	interface eth2
	 ip address 10.0.8.2/24
	 ipv6 address 2001:8::2/64
	!
	interface eth1
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	!
    }
    canvas c1
    iconcoords {820.3333333333334 406.3333333333333}
    labelcoords {820.3333333333334 438.3333333333333}
    interface-peer {eth1 n3}
    interface-peer {eth2 n1}
    interface-peer {eth0 n9}
    interface-peer {eth3 n26}
}

node n9 {
    type router
    model router
    network-config {
	hostname router-1
	!
	interface eth0
	 ip address 10.0.0.2/24
	 ipv6 address 2001:0::2/64
	!
	interface eth2
	 ip address 10.0.10.2/24
	 ipv6 address 2001:10::2/64
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
    }
    canvas c1
    iconcoords {1252.3333333333333 405.3333333333333}
    labelcoords {1252.3333333333333 437.3333333333333}
    interface-peer {eth1 n4}
    interface-peer {eth2 n1}
    interface-peer {eth0 n8}
}

node n2 {
    type router
    model host
    network-config {
	hostname zaibatsu
	!
	interface eth0
	 ip address 10.0.4.12/24
	 ipv6 address 2001:4::12/64
	!
    }
    canvas c1
    iconcoords {119.0 120.0}
    labelcoords {119.0 152.0}
    interface-peer {eth0 n26}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('zaibatsu.sh', )
	cmdup=('sh zaibatsu.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:zaibatsu.sh
	custom-command zaibatsu.sh
	config {
	file:///usr/local/lib/core/dns/zaibatsu./launch_zaibatsu.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n5 {
    type router
    model host
    network-config {
	hostname reverse
	!
	interface eth0
	 ip address 10.0.5.12/24
	 ipv6 address 2001:5::12/64
	!
    }
    canvas c1
    iconcoords {119.0 503.0}
    labelcoords {119.0 535.0}
    interface-peer {eth0 n27}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('sh reverse.sh', )
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n10 {
    type router
    model host
    network-config {
	hostname inaddr
	!
	interface eth0
	 ip address 10.0.9.12/24
	 ipv6 address 2001:9::12/64
	!
    }
    canvas c1
    iconcoords {121.0 888.0}
    labelcoords {121.0 920.0}
    interface-peer {eth0 n29}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('sh inaddr.sh', )
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n11 {
    type router
    model host
    network-config {
	hostname shinomiya-sp
	!
	interface eth0
	 ip address 10.0.4.11/24
	 ipv6 address 2001:4::11/64
	!
    }
    canvas c1
    iconcoords {212.0 122.0}
    labelcoords {212.0 154.0}
    interface-peer {eth0 n26}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('shinomiya.sh', )
	cmdup=('sh shinomiya.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:shinomiya.sh
	custom-command shinomiya.sh
	config {
	file:///usr/local/lib/core/dns/shinomiya.zaibatsu./launch_shinomiya_sp.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n13 {
    type router
    model host
    network-config {
	hostname shinomiya-ss-1
	!
	interface eth0
	 ip address 10.0.5.11/24
	 ipv6 address 2001:5::11/64
	!
    }
    canvas c1
    iconcoords {219.0 507.0}
    labelcoords {219.0 539.0}
    interface-peer {eth0 n27}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_shinomiya_ss1.sh', )
	cmdup=('sh launch_shinomiya_ss1.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_shinomiya_ss1.sh
	custom-command launch_shinomiya_ss1.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/shinomiya.zaibatsu./configuration_shinomiya_ss1.conf"
	PORT="20009"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n14 {
    type router
    model host
    network-config {
	hostname shinomiya-ss-2
	!
	interface eth0
	 ip address 10.0.9.11/24
	 ipv6 address 2001:9::11/64
	!
    }
    canvas c1
    iconcoords {215.0 888.0}
    labelcoords {215.0 920.0}
    interface-peer {eth0 n29}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_shinomiya_ss2.sh', )
	cmdup=('sh launch_shinomiya_ss2.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_shinomiya_ss2.sh
	custom-command launch_shinomiya_ss2.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/shinomiya.zaibatsu./configuration_shinomiya_ss2.conf"
	PORT="20010"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n15 {
    type router
    model host
    network-config {
	hostname shijo-sp
	!
	interface eth0
	 ip address 10.0.9.10/24
	 ipv6 address 2001:9::10/64
	!
    }
    canvas c1
    iconcoords {311.0 888.0}
    labelcoords {311.0 920.0}
    interface-peer {eth0 n29}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_shijo_sp.sh', )
	cmdup=('sh launch_shijo_sp.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_shijo_sp.sh
	custom-command launch_shijo_sp.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/shijo.zaibatsu./configuration_shijo_sp.conf"
	PORT="20002"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n16 {
    type router
    model host
    network-config {
	hostname shijo-ss-1
	!
	interface eth0
	 ip address 10.0.5.10/24
	 ipv6 address 2001:5::10/64
	!
    }
    canvas c1
    iconcoords {312.0 503.0}
    labelcoords {312.0 535.0}
    interface-peer {eth0 n27}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_shijo_ss1.sh', )
	cmdup=('sh launch_shijo_ss1.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_shijo_ss1.sh
	custom-command launch_shijo_ss1.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/shijo.zaibatsu./configuration_shijo_ss1.conf"
	PORT="20011"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n17 {
    type router
    model host
    network-config {
	hostname shijo-ss-2
	!
	interface eth0
	 ip address 10.0.4.10/24
	 ipv6 address 2001:4::10/64
	!
    }
    canvas c1
    iconcoords {311.0 121.0}
    labelcoords {311.0 153.0}
    interface-peer {eth0 n26}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_shijo_ss2.sh', )
	cmdup=('sh launch_shijo_ss2.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_shijo_ss2.sh
	custom-command launch_shijo_ss2.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/shijo.zaibatsu./configuration_shijo_ss2.conf"
	PORT="20012"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n18 {
    type router
    model host
    network-config {
	hostname shinomiya-mx
	!
	interface eth0
	 ip address 10.0.13.11/24
	 ipv6 address 2001:13::11/64
	!
    }
    canvas c1
    iconcoords {1849.0 505.0}
    labelcoords {1849.0 537.0}
    interface-peer {eth0 n12}
}

node n19 {
    type router
    model host
    network-config {
	hostname shinomyia-web
	!
	interface eth0
	 ip address 10.0.13.14/24
	 ipv6 address 2001:13::14/64
	!
    }
    canvas c1
    iconcoords {1946.0 696.0}
    labelcoords {1946.0 728.0}
    interface-peer {eth0 n12}
}

node n20 {
    type router
    model host
    network-config {
	hostname shijo-mx-1
	!
	interface eth0
	 ip address 10.0.13.12/24
	 ipv6 address 2001:13::12/64
	!
    }
    canvas c1
    iconcoords {1943.0 504.0}
    labelcoords {1943.0 536.0}
    interface-peer {eth0 n12}
}

node n26 {
    type lanswitch
    network-config {
	hostname s-1
	!
    }
    canvas c1
    iconcoords {382.0 217.0}
    labelcoords {382.0 241.0}
    interface-peer {e0 n17}
    interface-peer {e1 n11}
    interface-peer {e2 n2}
    interface-peer {e3 n30}
    interface-peer {e5 n37}
    interface-peer {e6 n42}
    interface-peer {e7 n8}
    interface-peer {e4 n21}
}

node n27 {
    type lanswitch
    network-config {
	hostname s-2
	!
    }
    canvas c1
    iconcoords {385.0 601.0}
    labelcoords {385.0 625.0}
    interface-peer {e0 n16}
    interface-peer {e1 n13}
    interface-peer {e2 n5}
    interface-peer {e3 n31}
    interface-peer {e4 n39}
    interface-peer {e5 n35}
    interface-peer {e6 n38}
    interface-peer {e7 n3}
}

node n29 {
    type lanswitch
    network-config {
	hostname s-3
	!
    }
    canvas c1
    iconcoords {381.0 984.0}
    labelcoords {381.0 1008.0}
    interface-peer {e0 n15}
    interface-peer {e1 n14}
    interface-peer {e2 n10}
    interface-peer {e3 n32}
    interface-peer {e4 n40}
    interface-peer {e5 n34}
    interface-peer {e6 n41}
    interface-peer {e7 n7}
}

node n30 {
    type router
    model host
    network-config {
	hostname kaguya-sp
	!
	interface eth0
	 ip address 10.0.4.13/24
	 ipv6 address 2001:4::13/64
	!
    }
    canvas c1
    iconcoords {119.0 216.0}
    labelcoords {119.0 248.0}
    interface-peer {eth0 n26}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_kaguya_sp.sh', )
	cmdup=('sh launch_kaguya_sp.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_kaguya_sp.sh
	custom-command launch_kaguya_sp.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/kaguya.shinomiya.zaibatsu./configuration_kaguya_sp.conf"
	PORT="20003"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n31 {
    type router
    model host
    network-config {
	hostname kaguya-ss-1
	!
	interface eth0
	 ip address 10.0.5.13/24
	 ipv6 address 2001:5::13/64
	!
    }
    canvas c1
    iconcoords {118.0 598.0}
    labelcoords {118.0 630.0}
    interface-peer {eth0 n27}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_kaguya_ss1.sh', )
	cmdup=('sh launch_kaguya_ss1.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_kaguya_ss1.sh
	custom-command launch_kaguya_ss1.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/kaguya.shinomiya.zaibatsu./configuration_kaguya_ss1.conf"
	PORT="20013"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n32 {
    type router
    model host
    network-config {
	hostname kaguya-ss-2
	!
	interface eth0
	 ip address 10.0.9.13/24
	 ipv6 address 2001:9::13/64
	!
    }
    canvas c1
    iconcoords {119.0 985.0}
    labelcoords {119.0 1017.0}
    interface-peer {eth0 n29}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_kaguya_ss2.sh', )
	cmdup=('sh launch_kaguya_ss2.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_kaguya_ss2.sh
	custom-command launch_kaguya_ss2.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/kaguya.shinomiya.zaibatsu./configuration_kaguya_ss2.conf"
	PORT="20014"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n33 {
    type router
    model host
    network-config {
	hostname kaguya-mx-1
	!
	interface eth0
	 ip address 10.0.13.16/24
	 ipv6 address 2001:13::16/64
	!
    }
    canvas c1
    iconcoords {1755.0 698.0}
    labelcoords {1755.0 730.0}
    interface-peer {eth0 n12}
}

node n34 {
    type router
    model host
    network-config {
	hostname kaguya-mx-2
	!
	interface eth0
	 ip address 10.0.9.15/24
	 ipv6 address 2001:9::15/64
	!
    }
    canvas c1
    iconcoords {216.0 1080.0}
    labelcoords {216.0 1112.0}
    interface-peer {eth0 n29}
}

node n35 {
    type router
    model host
    network-config {
	hostname kaguya-web
	!
	interface eth0
	 ip address 10.0.5.15/24
	 ipv6 address 2001:5::15/64
	!
    }
    canvas c1
    iconcoords {217.0 697.0}
    labelcoords {217.0 729.0}
    interface-peer {eth0 n27}
}

node n36 {
    type router
    model host
    network-config {
	hostname maki-sp
	!
	interface eth0
	 ip address 10.0.13.15/24
	 ipv6 address 2001:13::15/64
	!
    }
    canvas c1
    iconcoords {1848.0 697.0}
    labelcoords {1848.0 729.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_maki_sp.sh', )
	cmdup=('sh launch_maki_sp.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_maki_sp.sh
	custom-command launch_maki_sp.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/maki.shijo.shinomiya./configuration_maki_sp.conf"
	PORT="20006"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n37 {
    type router
    model host
    network-config {
	hostname maki-ss-1
	!
	interface eth0
	 ip address 10.0.4.15/24
	 ipv6 address 2001:4::15/64
	!
    }
    canvas c1
    iconcoords {215.0 316.0}
    labelcoords {215.0 348.0}
    interface-peer {eth0 n26}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_maki_ss1.sh', )
	cmdup=('sh launch_maki_ss1.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_maki_ss1.sh
	custom-command launch_maki_ss1.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/maki.shijo.shinomiya./configuration_maki_ss1.conf"
	PORT="20015"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n38 {
    type router
    model host
    network-config {
	hostname maki-ss-2
	!
	interface eth0
	 ip address 10.0.5.16/24
	 ipv6 address 2001:5::16/64
	!
    }
    canvas c1
    iconcoords {311.0 696.0}
    labelcoords {311.0 728.0}
    interface-peer {eth0 n27}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_maki_ss2.sh', )
	cmdup=('sh launch_maki_ss2.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_maki_ss2.sh
	custom-command launch_maki_ss2.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/maki.shijo.shinomiya./configuration_maki_ss2.conf"
	PORT="20016"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n39 {
    type router
    model host
    network-config {
	hostname maki-mx
	!
	interface eth0
	 ip address 10.0.5.14/24
	 ipv6 address 2001:5::14/64
	!
    }
    canvas c1
    iconcoords {120.0 699.0}
    labelcoords {120.0 731.0}
    interface-peer {eth0 n27}
}

node n40 {
    type router
    model host
    network-config {
	hostname maki-web-1
	!
	interface eth0
	 ip address 10.0.9.14/24
	 ipv6 address 2001:9::14/64
	!
    }
    canvas c1
    iconcoords {119.0 1084.0}
    labelcoords {119.0 1116.0}
    interface-peer {eth0 n29}
}

node n41 {
    type router
    model host
    network-config {
	hostname maki-web-2
	!
	interface eth0
	 ip address 10.0.9.16/24
	 ipv6 address 2001:9::16/64
	!
    }
    canvas c1
    iconcoords {312.0 1083.0}
    labelcoords {312.0 1115.0}
    interface-peer {eth0 n29}
}

node n42 {
    type router
    model host
    network-config {
	hostname resolution-1
	!
	interface eth0
	 ip address 10.0.4.16/24
	 ipv6 address 2001:4::16/64
	!
    }
    canvas c1
    iconcoords {312.0 313.0}
    labelcoords {312.0 345.0}
    interface-peer {eth0 n26}
    services {DefaultRoute SSH UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_resolution.sh', )
	cmdup=('sh launch_resolution.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_resolution.sh
	custom-command launch_resolution.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.resolution_server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/resolution/configuration_resolution_sp.conf"
	PORT="20004"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH -d" >> launch.sh
	}
    }
}

node n44 {
    type router
    model host
    network-config {
	hostname babi
	!
	interface eth0
	 ip address 10.0.13.10/24
	 ipv6 address 2001:13::10/64
	!
    }
    canvas c1
    iconcoords {1756.0 501.0}
    labelcoords {1756.0 533.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_babi.sh', )
	cmdup=('sh launch_babi.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_babi.sh
	custom-command launch_babi.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/zaibatsu./configuration_zaibatsu_babi.conf"
	PORT="20017"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH --recursive -d -r" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n12 {
    type lanswitch
    network-config {
	hostname s-4
	!
    }
    canvas c1
    iconcoords {1679.0 600.0}
    labelcoords {1679.0 624.0}
    interface-peer {e0 n44}
    interface-peer {e1 n18}
    interface-peer {e2 n20}
    interface-peer {e4 n19}
    interface-peer {e5 n36}
    interface-peer {e6 n33}
    interface-peer {e7 n4}
    interface-peer {e3 n22}
}

node n21 {
    type router
    model host
    network-config {
	hostname shijo-mx-2
	!
	interface eth0
	 ip address 10.0.4.14/24
	 ipv6 address 2001:4::14/64
	!
    }
    canvas c1
    iconcoords {118.66666666666667 318.6666666666667}
    labelcoords {118.66666666666667 350.6666666666667}
    interface-peer {eth0 n26}
}

node n22 {
    type router
    model host
    network-config {
	hostname resolution-2
	!
	interface eth0
	 ip address 10.0.13.13/24
	 ipv6 address 2001:13::13/64
	!
    }
    canvas c1
    iconcoords {1942.6666666666667 602.6666666666666}
    labelcoords {1942.6666666666667 634.6666666666666}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('launch_res_2.sh', )
	cmdup=('sh launch_res_2.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:launch_res_2.sh
	custom-command launch_res_2.sh
	config {
	#!/bin/sh
	
	mkdir services
	cp -r /home/core/Desktop/mini-dns-py/ services/
	
	MODULE="dns.server.resolution_server"
	CONFIG="/home/core/Documents/dns-configuration/configuration-files/resolution/configuration_resolution_sp_maki.conf"
	PORT="20005"
	TIMEOUT="1220"
	
	LAUNCH="python3.10 -m $MODULE -c $CONFIG -p $PORT -t $TIMEOUT"
	
	echo "#!/bin/sh" > launch.sh
	echo "cd services/mini-dns-py/src" >> launch.sh
	echo "$LAUNCH -d" >> launch.sh
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n23 {
    type router
    model PC
    network-config {
	hostname Host
	!
	interface eth0
	 ip address 10.0.16.20/24
	 ipv6 address 2001:16::20/64
	!
    }
    canvas c1
    iconcoords {1032.0 1037.0}
    labelcoords {1032.0 1069.0}
    interface-peer {eth0 n1}
}

link l3 {
    nodes {n9 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n6}
    bandwidth 0
}

link l7 {
    nodes {n7 n3}
    bandwidth 0
}

link l8 {
    nodes {n3 n8}
    bandwidth 0
}

link l9 {
    nodes {n1 n8}
    bandwidth 0
}

link l11 {
    nodes {n1 n9}
    bandwidth 0
}

link l12 {
    nodes {n1 n4}
    bandwidth 0
}

link l13 {
    nodes {n1 n6}
    bandwidth 0
}

link l15 {
    nodes {n1 n7}
    bandwidth 0
}

link l16 {
    nodes {n1 n3}
    bandwidth 0
}

link l1 {
    nodes {n8 n9}
    bandwidth 0
}

link l2 {
    nodes {n7 n6}
    bandwidth 0
}

link l5 {
    nodes {n26 n17}
    bandwidth 0
}

link l6 {
    nodes {n26 n11}
    bandwidth 0
}

link l10 {
    nodes {n26 n2}
    bandwidth 0
}

link l14 {
    nodes {n26 n30}
    bandwidth 0
}

link l18 {
    nodes {n26 n37}
    bandwidth 0
}

link l19 {
    nodes {n26 n42}
    bandwidth 0
}

link l20 {
    nodes {n27 n16}
    bandwidth 0
}

link l21 {
    nodes {n27 n13}
    bandwidth 0
}

link l22 {
    nodes {n27 n5}
    bandwidth 0
}

link l23 {
    nodes {n27 n31}
    bandwidth 0
}

link l24 {
    nodes {n27 n39}
    bandwidth 0
}

link l25 {
    nodes {n27 n35}
    bandwidth 0
}

link l26 {
    nodes {n27 n38}
    bandwidth 0
}

link l27 {
    nodes {n29 n15}
    bandwidth 0
}

link l28 {
    nodes {n29 n14}
    bandwidth 0
}

link l29 {
    nodes {n29 n10}
    bandwidth 0
}

link l30 {
    nodes {n29 n32}
    bandwidth 0
}

link l31 {
    nodes {n29 n40}
    bandwidth 0
}

link l32 {
    nodes {n29 n34}
    bandwidth 0
}

link l33 {
    nodes {n29 n41}
    bandwidth 0
}

link l34 {
    nodes {n12 n44}
    bandwidth 0
}

link l35 {
    nodes {n12 n18}
    bandwidth 0
}

link l36 {
    nodes {n12 n20}
    bandwidth 0
}

link l38 {
    nodes {n12 n19}
    bandwidth 0
}

link l39 {
    nodes {n12 n36}
    bandwidth 0
}

link l40 {
    nodes {n12 n33}
    bandwidth 0
}

link l41 {
    nodes {n26 n8}
    bandwidth 0
}

link l42 {
    nodes {n27 n3}
    bandwidth 0
}

link l43 {
    nodes {n29 n7}
    bandwidth 0
}

link l44 {
    nodes {n12 n4}
    bandwidth 0
}

link l17 {
    nodes {n26 n21}
    bandwidth 0
}

link l37 {
    nodes {n12 n22}
    bandwidth 0
}

link l45 {
    nodes {n1 n23}
    bandwidth 0
}

annotation a1 {
    iconcoords {725.0 33.0}
    type text
    label {"mini-dns-py" Testing Environment}
    labelcolor black
    fontfamily {Arial}
    fontsize {20}
    effects {bold italic}
    canvas c1
}

annotation a2 {
    iconcoords {572 281 1494 909}
    type oval
    label {Backbone Network}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #b1ffab
    width 0
    border black
    canvas c1
}

annotation a3 {
    iconcoords {47.0 49.0 383.0 385.0}
    type rectangle
    label {LAN 1}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #c0c0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {49.0 433.0 385.0 770.0}
    type rectangle
    label {LAN 2}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #cd8cff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a6 {
    iconcoords {47.0 817.0 382.0 1150.0}
    type rectangle
    label {LAN 3}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ff8cfd
    width 0
    border black
    rad 25
    canvas c1
}

annotation a5 {
    iconcoords {1679.0 431.0 2015.0 751.0}
    type rectangle
    label {LAN 4}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ffc98c
    width 0
    border black
    rad 25
    canvas c1
}

annotation a7 {
    iconcoords {1734.6666666666667 1127.6666666666667}
    type text
    label {Last time edited: 02/01/2023}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a8 {
    type text
    iconcoords {1022.0 630.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {2050 1200}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

